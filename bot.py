import asyncio
import os
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message
bot = Bot(token=TOKEN, parse_mode="HTML")
dp = Dispatcher()
from aiohttp import web
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —ñ–∑ config.env
load_dotenv()

# –í–∞—à —Ç–æ–∫–µ–Ω —ñ –≤–µ–±—Ö—É–∫ URL
TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_HOST = os.getenv("WEBHOOK_HOST")  # –ü—Ä–∏–∫–ª–∞–¥: https://your-app-name.up.railway.app
WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@dp.message(CommandStart())
async def start_handler(message: Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –ë–æ—Ç –ø—Ä–∞—Ü—é—î —á–µ—Ä–µ–∑ webhook üöÄ")

# –§—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—ñ–≤ –≤—ñ–¥ Telegram
async def handle_webhook(request):
    update = await request.json()
    await dp.feed_update(bot, update)
    return web.Response()

# –î—ñ—ó –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
async def on_startup(app):
    await bot.set_webhook(WEBHOOK_URL)

# –î—ñ—ó –ø—Ä–∏ –∑—É–ø–∏–Ω—Ü—ñ
async def on_shutdown(app):
    await bot.delete_webhook()

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–∞ aiohttp
app = web.Application()
app.router.add_post(WEBHOOK_PATH, handle_webhook)
app.on_startup.append(on_startup)
app.on_shutdown.append(on_shutdown)

# –ó–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É
if __name__ == "__main__":
    web.run_app(app, port=int(os.getenv('PORT', 8080)))